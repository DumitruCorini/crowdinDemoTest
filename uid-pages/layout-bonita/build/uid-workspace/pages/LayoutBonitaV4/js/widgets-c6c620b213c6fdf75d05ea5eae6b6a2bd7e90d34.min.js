
(function(){try{return angular.module('bonitasoft.ui.widgets');}catch(e){return angular.module('bonitasoft.ui.widgets',[]);}})().directive('pbTitle',function(){return{template:'<h1 ng-if="\'Level 1\' === properties.level" class="text-{{ properties.alignment }}">{{properties.text | uiTranslate}}</h1>\n<h2 ng-if="\'Level 2\' === properties.level" class="text-{{ properties.alignment }}">{{properties.text | uiTranslate}}</h2>\n<h3 ng-if="\'Level 3\' === properties.level" class="text-{{ properties.alignment }}">{{properties.text | uiTranslate}}</h3>\n<h4 ng-if="\'Level 4\' === properties.level" class="text-{{ properties.alignment }}">{{properties.text | uiTranslate}}</h4>\n<h5 ng-if="\'Level 5\' === properties.level" class="text-{{ properties.alignment }}">{{properties.text | uiTranslate}}</h5>\n<h6 ng-if="\'Level 6\' === properties.level" class="text-{{ properties.alignment }}">{{properties.text | uiTranslate}}</h6>\n'};});(function(){try{return angular.module('bonitasoft.ui.widgets');}catch(e){return angular.module('bonitasoft.ui.widgets',[]);}})().directive('customLayoutMenuBonitaV3',function(){return{controllerAs:'ctrl',controller:function WidgetlivingApplicationMenuController($scope,$http,$window,$location,$timeout,modalService){var ctrl=this;ctrl.filterChildren=function(parentId){return(ctrl.applicationMenuList||[]).filter(function(menu){return menu.parentMenuId===''+parentId;});};ctrl.isParentMenu=function(menu){return menu.parentMenuId==-1&&menu.applicationPageId==-1;};ctrl.displayPage=function(token){var previousToken=ctrl.pageToken;var previousPath=window.location.pathname;ctrl.pageToken=token;var urlPath=previousPath.substring(0,previousPath.length-previousToken.length-1)+token+'/'+$window.location.search;var stateObject={title:""+token+"",url:""+urlPath+""};if(typeof($window.history.pushState)!="undefined"){$window.history.pushState(stateObject,stateObject.title,stateObject.url);}else{alert("Browser does not support HTML5.");}
verifySession().then(setTargetedUrl,refreshPage);return false;};ctrl.openCurrentSessionModal=function(){modalService.open($scope.properties.currentSessionModalId);};ctrl.openAppSelectionModal=function(){modalService.open($scope.properties.appSelectionModalId);};ctrl.logoutAndUpdateSuccessfulLogoutVariable=function(){return $http.get($scope.properties.logoutURL).success(function(data){$scope.properties.successfulLogoutResponse=data;});};$window.addEventListener('popstate',function(e){parseCurrentURL();setTargetedUrl();refreshPage();});function parseCurrentURL(){var pathArray=$window.location.pathname.split('/');ctrl.applicationToken=pathArray[pathArray.length-3];ctrl.pageToken=pathArray[pathArray.length-2];}
function setApplicationMenuList(application){return $http.get('../API/living/application-menu/?c=100&f=applicationId%3D'+application.id+'&d=applicationPageId&o=menuIndex+ASC').success(function(data){ctrl.applicationMenuList=data;});}
function searchSeparator(){return $window.location.search?"&":"?";}
function setTargetedUrl(){$scope.properties.targetUrl=undefined;$timeout(function(){$scope.properties.targetUrl="../../../portal/resource/app/"+ctrl.applicationToken+"/"+ctrl.pageToken+"/content/"+$window.location.search+searchSeparator()+"app="+ctrl.applicationToken;},0);}
function refreshPage(){$window.location.reload();}
function verifySession(){var userIdentity='../API/identity/user/'+$scope.properties.userId;return $http.get(userIdentity);}
function setApplication(){var application=$scope.properties.application;ctrl.applicationToken=application.token;ctrl.pageToken=$scope.properties.pageToken;ctrl.applicationName=$scope.properties.application.displayName;setApplicationMenuList(application);setTargetedUrl();}
setApplication();},template:'<div class="navbar navbar-inverse" role="navigation">\n    <div class="container-fluid">\n        <div class="navbar-header">\n            <a class="navbar-brand visible-xs" ng-click="ctrl.displayPage(properties.homePageToken)" href="../{{properties.homePageToken}}/">{{ctrl.applicationName}}</a>\n            <button type="button" ng-init="navCollapsed = true" ng-click="navCollapsed = !navCollapsed" class="navbar-toggle">\n                <span class="icon-bar"></span>\n                <span class="icon-bar"></span>\n                <span class="icon-bar"></span>\n            </button>\n        </div>\n        <div collapse="navCollapsed" class="collapse navbar-responsive-collapse navbar-collapse">\n            <ul class="nav navbar-nav">\n                <li ng-class="{active:ctrl.pageToken===menu.applicationPageId.token}" ng-repeat="menu in ctrl.filterChildren(-1)" dropdown>\n                    <a ng-if="!ctrl.isParentMenu(menu)" ng-click="ctrl.displayPage(menu.applicationPageId.token)" href="../{{menu.applicationPageId.token}}/"><span class="maxTitleWidth">{{menu.displayName}}</span></a>\n                    <a ng-if="ctrl.isParentMenu(menu)" href="javascript:void(0);" dropdown-toggle>{{menu.displayName}}<span class="caret"></span></a>\n                    <ul ng-if="ctrl.isParentMenu(menu)"  class="dropdown-menu">\n                        <li ng-repeat="childMenu in ctrl.filterChildren(menu.id)">\n                            <a ng-click="ctrl.displayPage(childMenu.applicationPageId.token)" href="../{{childMenu.applicationPageId.token}}/">{{childMenu.displayName}}</a>\n                        </li>\n                    </ul>\n                </li>\n            </ul>\n            <ul class="nav navbar-nav visible-xs">\n                <hr ng-show="ctrl.applicationMenuList.length>0"/>\n                <li ng-if="!properties.isGuestUser"><a ng-click="ctrl.openCurrentSessionModal()" class="btn btn-link btn-account"><span class="max-title-width">{{properties.userName}}</span></a></li>\n                <li ng-if="properties.isGuestUser"><a ng-click="ctrl.logoutAndUpdateSuccessfulLogoutVariable()" class="btn btn-link btn-account"><span class="max-title-width" translate>Sign in</span></a></li>\n                <li><a ng-click="ctrl.openAppSelectionModal()" class="btn btn-link btn-account"><span class="glyphicon glyphicon-th"></span></a></li>\n            </ul>\n        </div>\n    </div>\n</div>'};});(function(){try{return angular.module('bonitasoft.ui.widgets');}catch(e){return angular.module('bonitasoft.ui.widgets',[]);}})().directive('pbText',function(){return{template:'<div\n ng-if="!properties.labelHidden"\n ng-class="{\n    \'form-horizontal\': properties.labelPosition === \'left\' ,\n    \'row\': properties.labelPosition === \'top\'\n    }">\n    <div class="form-group">\n        <label\n            class="control-label col-xs-{{ !properties.labelHidden ? properties.labelWidth : 12 }}" ng-bind-html="properties.label | uiTranslate">\n        </label>\n  <p ng-if="properties.allowHTML" class="form-control-static col-xs-{{ 12 - (!properties.labelHidden && properties.labelPosition === \'left\' ? properties.labelWidth : 0) }}" ng-bind-html="properties.text | uiTranslate"></p>\n  <p ng-if="!properties.allowHTML" class="form-control-static col-xs-{{ 12 - (!properties.labelHidden && properties.labelPosition === \'left\' ? properties.labelWidth : 0) }}" ng-bind="properties.text | uiTranslate"></p>\n    </div>\n</div>\n<p ng-if="properties.labelHidden && properties.allowHTML" class="text-{{ properties.alignment }}" ng-bind-html="properties.text | uiTranslate"></p>\n<p ng-if="properties.labelHidden && !properties.allowHTML" class="text-{{ properties.alignment }}" ng-bind="properties.text | uiTranslate"></p>\n'};});(function(){try{return angular.module('bonitasoft.ui.widgets');}catch(e){return angular.module('bonitasoft.ui.widgets',[]);}})().directive('pbSelect',function(){return{controllerAs:'ctrl',controller:function PbSelectCtrl($scope,$parse,$log,widgetNameFactory,$timeout,$window,$element){var ctrl=this;function comparator(initialValue,item){return angular.equals(initialValue,ctrl.getValue(item));}
function createGetter(accessor){return accessor&&$parse(accessor);}
this.getLabel=createGetter($scope.properties.displayedKey)||function(item){return typeof item==='string'?item:JSON.stringify(item);};this.getValue=createGetter($scope.properties.returnedKey)||function(item){return item;};this.findSelectedItem=function(items){return items.filter(comparator.bind(null,$scope.properties.value)).map(function(item){return ctrl.getValue(item);})[0];};this.setSelectedValue=function(foundItem){$timeout(function(){$scope.properties.value=angular.isDefined(foundItem)?foundItem:null;},0);};$scope.$watchCollection('properties.availableValues',function(items){if(Array.isArray(items)){var foundItem=ctrl.findSelectedItem(items);if($window.navigator&&$window.navigator.userAgent&&$window.navigator.userAgent.indexOf('MSIE 9')>=0){var option=document.createElement('option');var select=$element.find('select')[0];select.add(option,null);select.remove(select.options.length-1);}
$scope.properties.value=undefined;ctrl.setSelectedValue(foundItem);}});$scope.$watch('properties.value',function(value){if(angular.isDefined(value)&&value!==null){var items=$scope.properties.availableValues;if(Array.isArray(items)){var foundItem=ctrl.findSelectedItem(items);ctrl.setSelectedValue(foundItem);}}});this.name=widgetNameFactory.getName('pbSelect');if(!$scope.properties.isBound('value')){$log.error('the pbSelect property named "value" need to be bound to a variable');}},template:'<div ng-class="{\n    \'form-horizontal\': properties.labelPosition === \'left\' && !properties.labelHidden,\n    \'row\': properties.labelPosition === \'top\' && !properties.labelHidden || properties.labelHidden\n    }">\n    <div class="form-group">\n        <label\n            ng-if="!properties.labelHidden"\n            ng-class="{ \'control-label--required\': properties.required }"\n            class="control-label col-xs-{{ !properties.labelHidden && properties.labelPosition === \'left\' ? properties.labelWidth : 12 }}">\n            {{ properties.label | uiTranslate }}\n        </label>\n        <div class="col-xs-{{ 12 - (!properties.labelHidden && properties.labelPosition === \'left\' ? properties.labelWidth : 0) }}" >\n            <select\n                class="form-control"\n                name="{{ctrl.name}}"\n                ng-model="properties.value"\n                ng-model-options="{ allowInvalid: true }"\n                ng-options="ctrl.getValue(option) as (ctrl.getLabel(option) | uiTranslate) for option in properties.availableValues"\n                ng-required="properties.required"\n                ng-disabled="properties.disabled">\n                <option style="display:none" value="">\n                    {{ properties.placeholder | uiTranslate }}\n                </option>\n            </select>\n            <div ng-messages="$form[ctrl.name].$dirty && $form[ctrl.name].$error " ng-messages-include="forms-generic-errors.html" role="alert"></div>\n        </div>\n    </div>\n</div>\n'};});(function(){try{return angular.module('bonitasoft.ui.widgets');}catch(e){return angular.module('bonitasoft.ui.widgets',[]);}})().directive('pbImage',function(){return{template:'<img class="img-responsive" ng-if="(properties.srcType ===\'Asset\' &amp;&amp; properties.assetName) || (properties.srcType !== \'Asset\' &amp;&amp; properties.url)" ng-src="{{ (properties.srcType===\'Asset\')? ((environment.editor.pageId) ? \'preview/page/\' + environment.editor.pageId + \'/\' : \'\' ) + \'assets/img/\' + properties.assetName : properties.url }}" alt="{{ properties.alt }}">\n<img class="img-responsive" ng-if="!(properties.srcType ===\'Asset\' &amp;&amp; properties.assetName) &amp;&amp; !(properties.srcType !== \'Asset\' &amp;&amp; properties.url)" ng-src="data:image/svg+xml,%3Csvg%20xmlns%3D\'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg\'%20viewBox%3D\'0%200%2050%2020\'%3E%3Cpath%20fill%3D\'%23ccc\'%20d%3D\'M10%201v18h30V1H10zm29%2017H11V2h28v16zM20%209.1l3%203%205-7L36%2016H14l6-6.9zM18%206c0%201.1-.9%202-2%202s-2-.9-2-2%20.9-2%202-2%202%20.9%202%202z\'%2F%3E%3C%2Fsvg%3E">\n'};});(function(){try{return angular.module('bonitasoft.ui.widgets');}catch(e){return angular.module('bonitasoft.ui.widgets',[]);}})().directive('pbInput',function(){return{controllerAs:'ctrl',controller:function PbInputCtrl($scope,$log,widgetNameFactory){'use strict';this.name=widgetNameFactory.getName('pbInput');if(!$scope.properties.isBound('value')){$log.error('the pbInput property named "value" need to be bound to a variable');}},template:'<div ng-class="{\n    \'form-horizontal\': properties.labelPosition === \'left\' && !properties.labelHidden,\n    \'row\': properties.labelPosition === \'top\' && !properties.labelHidden || properties.labelHidden\n    }">\n    <div class="form-group">\n        <label\n            ng-if="!properties.labelHidden"\n            ng-class="{ \'control-label--required\': properties.required }"\n            class="control-label col-xs-{{ !properties.labelHidden && properties.labelPosition === \'left\' ? properties.labelWidth : 12 }}" ng-bind-html="properties.label | uiTranslate">\n        </label>\n        <div class="col-xs-{{ 12 - (!properties.labelHidden && properties.labelPosition === \'left\' ? properties.labelWidth : 0) }}">\n            <input\n                type="{{properties.type}}"\n                class="form-control"\n                placeholder="{{ properties.placeholder | uiTranslate }}"\n                ng-model="properties.value"\n                ng-model-options="{ allowInvalid: true }"\n                name="{{ctrl.name}}"\n                ng-required="properties.required"\n                ng-minlength="properties.minLength"\n                ng-maxlength="properties.maxLength"\n                min="{{properties.min}}"\n                max="{{properties.max}}"\n                step="{{properties.step}}"\n                ng-readonly="properties.readOnly">\n            <div ng-messages="$form[ctrl.name].$dirty && $form[ctrl.name].$error " ng-messages-include="forms-generic-errors.html" role="alert"></div>\n        </div>\n    </div>\n</div>\n'};});(function(){try{return angular.module('bonitasoft.ui.widgets');}catch(e){return angular.module('bonitasoft.ui.widgets',[]);}})().directive('pbModalContainer',function(){return{controllerAs:'ctrl',controller:function PbModalContainerCtrl($scope,$log,$modal,modalService){var ctrl=this;$scope.currentModal=this;modalService.register($scope.properties.modalId,this);var modalInstances=[];ctrl.close=function(){if(modalInstances){modalInstances.pop().close();}else{console.log('No instance of modal to close');}}
ctrl.open=function(){var modalInstance=$modal.open({scope:$scope,size:$scope.properties.size,animation:$scope.properties.animation,ariaLabelledBy:'modal-title',ariaDescribedBy:'modal-body',templateUrl:$scope.properties.modalId+'-modalContent.html',appendTo:undefined});modalInstances.push(modalInstance);}},template:''};});(function(){try{return angular.module('bonitasoft.ui.widgets');}catch(e){return angular.module('bonitasoft.ui.widgets',[]);}})().directive('pbButton',function(){return{controllerAs:'ctrl',controller:function PbButtonCtrl($scope,$http,$location,$log,$window,localStorageService,modalService){'use strict';var vm=this;this.action=function action(){if($scope.properties.action==='Remove from collection'){removeFromCollection();closeModal($scope.properties.closeOnSuccess);}else if($scope.properties.action==='Add to collection'){addToCollection();closeModal($scope.properties.closeOnSuccess);}else if($scope.properties.action==='Start process'){startProcess();}else if($scope.properties.action==='Submit task'){submitTask();}else if($scope.properties.action==='Open modal'){closeModal($scope.properties.closeOnSuccess);openModal($scope.properties.modalId);}else if($scope.properties.action==='Close modal'){closeModal(true);}else if($scope.properties.url){doRequest($scope.properties.action,$scope.properties.url);}};function openModal(modalId){modalService.open(modalId);}
function closeModal(shouldClose){if(shouldClose)
modalService.close();}
function removeFromCollection(){if($scope.properties.collectionToModify){if(!Array.isArray($scope.properties.collectionToModify)){throw'Collection property for widget button should be an array, but was '+$scope.properties.collectionToModify;}
var index=-1;if($scope.properties.collectionPosition==='First'){index=0;}else if($scope.properties.collectionPosition==='Last'){index=$scope.properties.collectionToModify.length-1;}else if($scope.properties.collectionPosition==='Item'){index=$scope.properties.collectionToModify.indexOf($scope.properties.removeItem);}
if(index!==-1){$scope.properties.collectionToModify.splice(index,1);}}}
function addToCollection(){if(!$scope.properties.collectionToModify){$scope.properties.collectionToModify=[];}
if(!Array.isArray($scope.properties.collectionToModify)){throw'Collection property for widget button should be an array, but was '+$scope.properties.collectionToModify;}
var item=angular.copy($scope.properties.valueToAdd);if($scope.properties.collectionPosition==='First'){$scope.properties.collectionToModify.unshift(item);}else{$scope.properties.collectionToModify.push(item);}}
function startProcess(){var id=getUrlParam('id');if(id){var prom=doRequest('POST','../API/bpm/process/'+id+'/instantiation',getUserParam()).then(function(){localStorageService.delete($window.location.href);});}else{$log.log('Impossible to retrieve the process definition id value from the URL');}}
function doRequest(method,url,params){vm.busy=true;var req={method:method,url:url,data:angular.copy($scope.properties.dataToSend),params:params};return $http(req).success(function(data,status){$scope.properties.dataFromSuccess=data;$scope.properties.responseStatusCode=status;$scope.properties.dataFromError=undefined;notifyParentFrame({message:'success',status:status,dataFromSuccess:data,dataFromError:undefined,responseStatusCode:status});if($scope.properties.targetUrlOnSuccess&&method!=='GET'){redirectIfNeeded();}
closeModal($scope.properties.closeOnSuccess);}).error(function(data,status){$scope.properties.dataFromError=data;$scope.properties.responseStatusCode=status;$scope.properties.dataFromSuccess=undefined;notifyParentFrame({message:'error',status:status,dataFromError:data,dataFromSuccess:undefined,responseStatusCode:status});}).finally(function(){vm.busy=false;});}
function redirectIfNeeded(){var iframeId=$window.frameElement?$window.frameElement.id:null;if(!iframeId||iframeId&&iframeId.indexOf('bonitaframe')!==0){$window.location.assign($scope.properties.targetUrlOnSuccess);}}
function notifyParentFrame(additionalProperties){if($window.parent!==$window.self){var dataToSend=angular.extend({},$scope.properties,additionalProperties);$window.parent.postMessage(JSON.stringify(dataToSend),'*');}}
function getUserParam(){var userId=getUrlParam('user');if(userId){return{'user':userId};}
return{};}
function getUrlParam(param){var paramValue=$location.absUrl().match('[//?&]'+param+'=([^&#]*)($|[&#])');if(paramValue){return paramValue[1];}
return'';}
function submitTask(){var id;id=getUrlParam('id');if(id){var params=getUserParam();params.assign=$scope.properties.assign;doRequest('POST','../API/bpm/userTask/'+getUrlParam('id')+'/execution',params).then(function(){localStorageService.delete($window.location.href);});}else{$log.log('Impossible to retrieve the task id value from the URL');}}},template:'<div class="text-{{ properties.alignment }}">\n    <button\n        ng-class="\'btn btn-\' + properties.buttonStyle"\n        ng-click="ctrl.action()"\n        type="button"\n        ng-disabled="properties.disabled || ctrl.busy" ng-bind-html="properties.label | uiTranslate"></button>\n</div>\n'};});(function(){try{return angular.module('bonitasoft.ui.widgets');}catch(e){return angular.module('bonitasoft.ui.widgets',[]);}})().directive('customLivingApplicationIFrameV4',function(){return{controllerAs:'ctrl',controller:function WidgetlivingApplicationIFrameController($scope,$element,$interval,$sce){$scope.$watch(function(){return $scope.properties.src},function(){if(!$scope.properties.src){return;}
var iframes=$element.find('iframe');if(iframes.length>0){var iframeToRemeove=iframes[0];var parentDiv=iframeToRemeove.parentNode;parentDiv.removeChild(iframeToRemeove);}
var iframe=document.createElement('iframe');iframe.setAttribute("id","bonitaframe");iframe.setAttribute("src",$sce.trustAsResourceUrl($scope.properties.src));iframe.setAttribute("width","100%");iframe.style.border="0";$element.append(iframe);});},template:''};});(function(){try{return angular.module('bonitasoft.ui.widgets');}catch(e){return angular.module('bonitasoft.ui.widgets',[]);}})().directive('pbLink',function(){return{controllerAs:'ctrl',controller:function PbLinkCtrl($scope,$location,$window,httpParamSerializer){'use strict';this.getHref=function(){var appToken=getAppToken('app');if($scope.properties.type==='page'){return getPortalUrl()+'/apps/'+(appToken||'APP_TOKEN_PLACEHOLDER')+'/'+$scope.properties.pageToken+buildQueryString();}else if($scope.properties.type==='process'){return getPortalUrl()+'/portal/form/process/'+$scope.properties.processName+'/'+$scope.properties.processVersion+buildQueryString(appToken?{app:appToken}:null);}else if($scope.properties.type==='task'){return getPortalUrl()+'/portal/form/taskInstance/'+$scope.properties.taskId+buildQueryString(appToken?{app:appToken}:null);}else if($scope.properties.type==='overview'){return getPortalUrl()+'/portal/form/processInstance/'+$scope.properties.caseId+buildQueryString(appToken?{app:appToken}:null);}else{return $scope.properties.targetUrl;}};this.getTarget=function(){if($scope.properties.type==='page'){return'_top';}
return $scope.properties.target;};function buildQueryString(additionalParams){var params=angular.extend({},$scope.properties.urlParams||{},additionalParams||{});var queryString=httpParamSerializer.paramSerializer(params);return queryString?'?'+queryString:'';}
function getAppToken(paramName){if($scope.properties.appToken){return $scope.properties.appToken;}
var appTokenParam=getUrlParam(paramName);if(appTokenParam){return appTokenParam;}
var appsURLPattern='\/apps\/([^/]*)\/';var urlMatches=$location.absUrl().match(appsURLPattern)||$window.top.location.href.match(appsURLPattern);if(urlMatches){return urlMatches[1];}
return null;}
function getUrlParam(paramName){var paramValue=$location.absUrl().match('[\/?&]'+paramName+'=([^&#]*)($|[&#])');if(paramValue){return paramValue[1];}
return'';}
function getPortalUrl(){var locationHref=$location.absUrl();var indexOfPortal=locationHref.indexOf('/portal/');if(indexOfPortal>=0){return locationHref.substring(0,indexOfPortal);}else{var indexOfApps=locationHref.indexOf('/apps/');if(indexOfApps>=0){return locationHref.substring(0,indexOfApps);}else{return'/bonita';}}}},template:'<div class="text-{{ properties.alignment }}">\n  <a ng-class="properties.buttonStyle !== \'none\' ? \'btn btn-\' + properties.buttonStyle : \'\'" ng-href="{{ctrl.getHref()}}" target="{{ctrl.getTarget()}}" ng-bind-html="properties.text | uiTranslate"></a>\n</div>\n'};});